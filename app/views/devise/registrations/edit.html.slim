- content_for :header_area do
  .profile-header
    header
      .container
        = t(".edit_devise_resource", resource_name: resource_name.to_s.humanize)

.profile
  div.row-fluid
    .settings
      = simple_form_for(resource, :as => resource_name, :url => registration_path(resource_name), :html => { :method => :put }) do |f|
        = f.error_notification
        .form-inputs
          span.tittle
          h2 Configurações do perfil
          = f.input :name, :required => true, :autofocus => true, :wrapper => :prepend do
            = content_tag :span, content_tag(:i, "", :class => 'icon-user'), :class => "add-on"
            = f.input_field :name

          = f.input :email, :required => true, :wrapper => :prepend do
            = content_tag :span, content_tag(:i, "", :class => 'icon-envelope'), :class => "add-on"
            = f.input_field :email

          = f.input :password, :autocomplete => "off", :required => false, :wrapper => :prepend, :hint => t('simple_form.hints.user.password_change') do
            = content_tag :span, content_tag(:i, "", :class => 'icon-lock'), :class => "add-on"
            = f.input_field :password

          = f.input :password_confirmation, :required => false, :wrapper => :prepend do
            = content_tag :span, content_tag(:i, "", :class => 'icon-lock'), :class => "add-on"
            = f.input_field :password_confirmation

          = f.input :current_password, :required => true, :wrapper => :prepend do
            = content_tag :span, content_tag(:i, "", :class => 'icon-lock'), :class => "add-on"
            = f.input_field :current_password

          = f.input :volunteer, :required => true, :wrapper => :prepend, :wrapper_html => { :class => 'volunteer-text' } do
            = f.input_field :volunteer, :class => "check-volunteer" 

          - if resource.verified_volunteer
            img id="verified_volunteer"
        
        .update
          = link_to t('.update'), "#", class: "btn-primary btn-custom btn-user-update"        
          = f.button :submit, t(".update"), class: "hide"

    .providers
      - if devise_mapping.omniauthable?
        table.table.table-bordered
          thead
            tr
              th.span3 = t(".provider")
              td = t(".connect_disconnect")
          tbody
            - resource_class.omniauth_providers.each do |provider_name|
              tr
                td= provider_name.to_s.titleize
                td
                  - provider = current_user.authorizations.provider(provider_name).first
                  = link_to t(".connect_your_provider", provider_name: provider_name.to_s.titleize), omniauth_authorize_path(resource_name, provider_name) unless provider.present?
                  = link_to t(".disconnect_from_provider", provider_name: provider_name.to_s.titleize), authorization_path(provider), method: :delete if provider.present?
